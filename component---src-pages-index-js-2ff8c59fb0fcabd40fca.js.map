{"version":3,"sources":["webpack:///./src/components/header.css?e4ab","webpack:///./src/components/layout.css?8c2f","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/Post.js","webpack:///./src/pages/index.js","webpack:///./src/components/post.css?bd00"],"names":["Header","Layout","children","Post","title","date","description","path","Home","data","allMarkdownRemark","edges","map","post","node","frontmatter","author","AllBlogsQuery"],"mappings":";;;;;AAAA,uC;;;;;;;ACAA,uC;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAKA,GAAMA,OAAM,CAAG,QAATA,OAAS,sBACb,qEAAQ,SAAS,CAAC,QAAlB,eACE,kEAAK,SAAS,CAAC,aAAf,kBADF,cAEE,iEAAI,SAAS,CAAC,aAAd,eACE,iEAAI,SAAS,CAAC,kBAAd,eACE,gEAAG,IAAI,CAAC,4CAAR,aADF,CADF,cAIE,iEAAI,SAAS,CAAC,kBAAd,eACE,gEAAG,IAAI,CAAC,iCAAR,WADF,CAJF,cAOE,iEAAI,SAAS,CAAC,kBAAd,eACE,gEAAG,IAAI,CAAC,yCAAR,YADF,CAPF,cAUE,2DAAC,2CAAD,EAAM,EAAE,CAAC,GAAT,EAVF,CAFF,CADa,EAAf,CAkBeA,+DAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA,GAAMC,cAAM,CAAG,QAATA,OAAS,UAAGC,SAAH,MAAGA,QAAH,oBACb,qCAAK,SAAS,CAAC,QAAf,eACE,8BAAC,yBAAD,MADF,cAEE,sCAAM,SAAS,CAAC,MAAhB,EAAwBA,QAAxB,CAFF,CADa,EAAf,CAWeD,mEAAf,E;;;;;;;;ACbA,GAAME,UAAI,CAAG,QAAPA,KAAO,UAAGC,MAAH,MAAGA,KAAH,CAAUC,IAAV,MAAUA,IAAV,CAAgBC,WAAhB,MAAgBA,WAAhB,CAA6BC,IAA7B,MAA6BA,IAA7B,oBACX,qCAAK,SAAS,CAAC,MAAf,eACE,8BAAC,4BAAD,EAAM,EAAE,CAAEA,IAAV,CAAgB,SAAS,CAAC,YAA1B,EACGH,KADH,CADF,cAIE,mCAAG,SAAS,CAAC,kBAAb,EAAiCE,WAAjC,CAJF,cAKE,mCAAG,SAAS,CAAC,iBAAb,EAAgCD,IAAhC,CALF,CADW,EAAb,CAUeF,6DAAf,E;;ACRA,GAAMK,WAAI,CAAG,QAAPA,KAAO,UAAGC,KAAH,MAAGA,IAAH,oBACX,8BAAC,iBAAD,MACGA,IAAI,CAACC,iBAAL,CAAuBC,KAAvB,CAA6BC,GAA7B,CAAiC,SAAAC,IAAI,CAAI,2BACWA,IAAI,CAACC,IAAL,CAAUC,WADrB,CAChCX,KADgC,uBAChCA,KADgC,CACzBY,MADyB,uBACzBA,MADyB,CACjBX,IADiB,uBACjBA,IADiB,CACXC,WADW,uBACXA,WADW,CACEC,IADF,uBACEA,IADF,CAGxC,mBACE,8BAAC,eAAD,EACE,KAAK,CAAEH,KADT,CAEE,MAAM,CAAEY,MAFV,CAGE,IAAI,CAAEX,IAHR,CAIE,WAAW,CAAEC,WAJf,CAKE,GAAG,CAAKD,IAAL,MAAcD,KALnB,CAME,IAAI,CAAEG,IANR,EADF,CAUD,CAbA,CADH,CADW,EAAb,CAmBeC,qFAAf,EAEO,GAAMS,cAAa,aAAnB,C;;;;;;;AC3BP,uC","file":"component---src-pages-index-js-2ff8c59fb0fcabd40fca.js","sourcesContent":["// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport \"./header.css\"\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <div className=\"header-name\">Scott Sandman</div>\r\n    <ul className=\"header-list\">\r\n      <li className=\"header-list-item\">\r\n        <a href=\"https://www.linkedin.com/in/scott-sandman/\">LinkedIn</a>\r\n      </li>\r\n      <li className=\"header-list-item\">\r\n        <a href=\"https://github.com/ScottSandman\">Github</a>\r\n      </li>\r\n      <li className=\"header-list-item\">\r\n        <a href=\"mailto:scottesandman@gmail.com?Subject=\">Contact</a>\r\n      </li>\r\n      <Link to=\"/\"></Link>\r\n    </ul>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <div className=\"layout\">\r\n    <Header />\r\n    <main className=\"main\">{children}</main>\r\n  </div>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./post.css\"\r\n\r\nconst Post = ({ title, date, description, path }) => (\r\n  <div className=\"post\">\r\n    <Link to={path} className=\"post-title\">\r\n      {title}\r\n    </Link>\r\n    <p className=\"post-description\">{description}</p>\r\n    <p className=\"post-written-by\">{date}</p>\r\n  </div>\r\n)\r\n\r\nexport default Post\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Post from \"../components/Post\"\r\n\r\nconst Home = ({ data }) => (\r\n  <Layout>\r\n    {data.allMarkdownRemark.edges.map(post => {\r\n      const { title, author, date, description, path } = post.node.frontmatter\r\n\r\n      return (\r\n        <Post\r\n          title={title}\r\n          author={author}\r\n          date={date}\r\n          description={description}\r\n          key={`${date}__${title}`}\r\n          path={path}\r\n        />\r\n      )\r\n    })}\r\n  </Layout>\r\n)\r\n\r\nexport default Home\r\n\r\nexport const AllBlogsQuery = graphql`\r\n  query AllBlogPosts {\r\n    allMarkdownRemark {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date\r\n            title\r\n            description\r\n            author\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}
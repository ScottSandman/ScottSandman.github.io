{"componentChunkName":"component---src-templates-blog-template-js","path":"/five-things","result":{"data":{"markdownRemark":{"frontmatter":{"author":"Scott Sandman","date":"2020-12-07","title":"5 Things I Wish I Learned in Bootcamp","path":"/five-things"},"html":"<p>I was writing a blog recently (as yet to be published) when I suddenly came to reason there were some obvious voids in my bootcamp learning experience. I have found myself having far too many \"oh, really?\", \"son-of-a-*%#/, that's all that was\" and \"a-ha\" moments as of late. Now, please don't get me wrong. This is not an indictment on the instructor or the curriculum. It's too easy to 20/20 the past and be critical of someone else. The fact of the matter is, with a little forethought, I could have either asked a question which would have led to the issue being discovered and discussed or I could have simply dug a little deeper into best practices and the future question-to-be could have already answered itself. This is just a wishlist that I hope helps other newbies bypass some of the aforementioned moments and just proceed to the \"hell, yeah! I got it working.\"</p>\n<ol>\n<li>\n<p>Social Meta Tags - To be clear up front, I still don't know enough about this topic. I was getting some direction from a mentor about how to post blogs from this very site to Twitter, Dev.to, LinkedIn, etc. I was way over thinking what needed to be done to generate a title, description and image to make the posts more appealing. Then I had one of those \"son-of-a...\" moments.</p>\n<p>I use React so <code class=\"language-text\">npm install --save react-helmet</code> and we have a little smolder in the wood. React Helmet supports title, base, meta, link, script, noscript and style head tags which should cover everything we need. Continue to follow the docs and we start to see a flame:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SomeComponentName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n       <span class=\"token comment\">/*\n       og is short for Open Graph and was created by Facebook. og is supported by other major platforms\n       such as LinkedIn, Google+ and Twitter. Twitter has their own meta tags, but will use og if it\n       can't locate them. I utilized meta tags with properties, but feel free to use the above mentioned\n       tags as needed.\n       */</span>\n       <span class=\"token operator\">&lt;</span>Helmet<span class=\"token operator\">></span>\n           <span class=\"token operator\">&lt;</span>meta property<span class=\"token operator\">=</span><span class=\"token string\">\"og:title\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"Scott Sandman | Software Engineer\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n           <span class=\"token operator\">&lt;</span>meta property<span class=\"token operator\">=</span><span class=\"token string\">\"og:image\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"//link-to-some-image.png\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n           <span class=\"token operator\">&lt;</span>meta\n               property<span class=\"token operator\">=</span><span class=\"token string\">\"og:image:alt\"</span>\n               content<span class=\"token operator\">=</span><span class=\"token string\">\"Should be a picture of Charleston, SC here\"</span>\n           <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n           <span class=\"token operator\">&lt;</span>meta property<span class=\"token operator\">=</span><span class=\"token string\">\"og:description\"</span> content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n           <span class=\"token operator\">&lt;</span>meta property<span class=\"token operator\">=</span><span class=\"token string\">\"og:url\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"https://scottsandman.github.io/\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n       <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Helmet<span class=\"token operator\">></span>\n   <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> SomeComponentName<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Let there be fire:</p>\n<p>// embed a tweet here</p>\n</li>\n<li>\n<p>Use JSDoc - Learning to develop using JavaScript, this is a simple one. An issue I might be able to cast a little shade on my instructor about. I documented my code when I entered the bootcamp. Hell, I was so tedious about some of it, I actually commented all my closing tags in HTML files so I didn't have to hunt for them when editing. At some point, though, we started going at a breakneck pace and my comment code began to wane. Granted, he was teaching us to write easily readable code, but that's not enough. I wish he would have slapped me on the wrist a time or two for not doing it and I definitely wish he would have said, \"Just use JSDoc.\"</p>\n<p>Okay, it was entirely my fault. I am back in the habit of commenting my code and you should be, too. It's important no matter how clean and readable your code is. Click <a href=\"https://jsdoc.app/about-getting-started.html\">here</a> to get started using JSDoc.</p>\n</li>\n<li>Legal Notices -</li>\n<li>Git -</li>\n<li>Not using the same database for production as used for development -</li>\n</ol>"},"site":{"siteMetadata":{"image":"/ravenel.jpg","siteUrl":"https://scottsandman.github.io"}}},"pageContext":{}},"staticQueryHashes":[]}
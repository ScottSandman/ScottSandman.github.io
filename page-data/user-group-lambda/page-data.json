{"componentChunkName":"component---src-templates-blog-template-js","path":"/user-group-lambda","result":{"data":{"markdownRemark":{"frontmatter":{"author":"Scott Sandman","date":"2020-09-24","title":"AWS Lambda - Assign User Group at Sign Up","path":"/user-group-lambda"},"html":"<p>During the course of developing a recent project using Cognito, I came across an issue with assigning users to a specific group when they signed up to use the application. On prior projects, I either had a single group or the luxury of assigning the users groups via the command line or Cognito console.</p>\n<p>The application I was developing had two separate auth paths; one for users and another for business clients. I started a Google search hoping to find something in the docs or a tutorial to guide me. What I found was a lot of other developers struggling with the same issue. Eventually, someone suggested using a Lambda to set the groups. I did a little more research, found enough to create what I needed so here we go.</p>\n<p>First, we'll initialize a new Amplify project using the CLI:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">amplify init</code></pre></div>\n<p>After answering the questions to set up the project, then we will add our auth:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">amplify <span class=\"token function\">add</span> auth</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"commandline\"><pre class=\"language-commandline\"><code class=\"language-commandline\">? Do you want to use the default authentication and security configuration? Default configuration\n? How do you want users to be able to sign in? Username\n? Do you want to configure advanced settings? Yes, I want to make some additional changes.\n? What attributes are required for signing up? Email\n? Do you want to enable any of the following capabilities? Add User to Group\n? Enter the name of the group to which users will be added. user\n? Do you want to edit your add-to-group function now? Yes</code></pre></div>\n<p>If the file does not open automatically, you can find it here:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">..</span>/amplify/backend/function/src/add-to-group.js</code></pre></div>\n<p>When we open the file, we see the following code:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint-disable-line */</span> <span class=\"token keyword\">const</span> aws <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aws-sdk'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cognitoidentityserviceprovider <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">aws<span class=\"token punctuation\">.</span>CognitoIdentityServiceProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> apiVersion<span class=\"token operator\">:</span> <span class=\"token string\">'2016-04-18'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> groupParams <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    GroupName<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">GROUP</span><span class=\"token punctuation\">,</span>\n    UserPoolId<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>userPoolId<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> addUserParams <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    GroupName<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">GROUP</span><span class=\"token punctuation\">,</span>\n    UserPoolId<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>userPoolId<span class=\"token punctuation\">,</span>\n    Username<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider<span class=\"token punctuation\">.</span><span class=\"token function\">getGroup</span><span class=\"token punctuation\">(</span>groupParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider<span class=\"token punctuation\">.</span><span class=\"token function\">createGroup</span><span class=\"token punctuation\">(</span>groupParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider<span class=\"token punctuation\">.</span><span class=\"token function\">adminAddUserToGroup</span><span class=\"token punctuation\">(</span>addUserParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This is a great start, but we are going to need to make some changes in order to get our users in the appropriate groups. First, we are not going to need the groupParams object. Instead, we are going to collect a custom attribute from the event request. We will go into more detail on the custom attribute when we move to the front end. So our file is going to look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint-disable-line */</span> <span class=\"token keyword\">const</span> aws <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aws-sdk'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cognitoidentityserviceprovider <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">aws<span class=\"token punctuation\">.</span>CognitoIdentityServiceProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> apiVersion<span class=\"token operator\">:</span> <span class=\"token string\">'2016-04-18'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//Get the custom group from the event request object key</span>\n  <span class=\"token keyword\">const</span> clientGroup <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>userAttributes<span class=\"token punctuation\">[</span><span class=\"token string\">\"custom:group\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> addUserParams <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    GroupName<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">GROUP</span><span class=\"token punctuation\">,</span>\n    UserPoolId<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>userPoolId<span class=\"token punctuation\">,</span>\n    Username<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider<span class=\"token punctuation\">.</span><span class=\"token function\">getGroup</span><span class=\"token punctuation\">(</span>groupParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider<span class=\"token punctuation\">.</span><span class=\"token function\">createGroup</span><span class=\"token punctuation\">(</span>groupParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider<span class=\"token punctuation\">.</span><span class=\"token function\">adminAddUserToGroup</span><span class=\"token punctuation\">(</span>addUserParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next, we need to update the addUserParams GroupName to reference our custom attribute value:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint-disable-line */</span> <span class=\"token keyword\">const</span> aws <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aws-sdk'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cognitoidentityserviceprovider <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">aws<span class=\"token punctuation\">.</span>CognitoIdentityServiceProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> apiVersion<span class=\"token operator\">:</span> <span class=\"token string\">'2016-04-18'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//Get the custom group from the event request object key</span>\n  <span class=\"token keyword\">const</span> clientGroup <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>userAttributes<span class=\"token punctuation\">[</span><span class=\"token string\">\"custom:group\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> addUserParams <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    GroupName<span class=\"token operator\">:</span> clientGroup<span class=\"token punctuation\">,</span>  <span class=\"token comment\">//set GroupName value to our custom attribute value</span>\n    UserPoolId<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>userPoolId<span class=\"token punctuation\">,</span>\n    Username<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider<span class=\"token punctuation\">.</span><span class=\"token function\">getGroup</span><span class=\"token punctuation\">(</span>groupParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider<span class=\"token punctuation\">.</span><span class=\"token function\">createGroup</span><span class=\"token punctuation\">(</span>groupParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider<span class=\"token punctuation\">.</span><span class=\"token function\">adminAddUserToGroup</span><span class=\"token punctuation\">(</span>addUserParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Alright, now we can go about adding our user to the appropriate Cognito Group. The second try/catch block calling the Cognito Identity Service Provider is the one we'll need to assign our users to the appropriate group, so we can go ahead and remove the first try/catch block and we are left with the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint-disable-line */</span> <span class=\"token keyword\">const</span> aws <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aws-sdk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cognitoidentityserviceprovider <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">aws<span class=\"token punctuation\">.</span>CognitoIdentityServiceProvider</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> apiVersion<span class=\"token operator\">:</span> <span class=\"token string\">\"2016-04-18\"</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//Get the custom group from the event request object key</span>\n  <span class=\"token keyword\">const</span> clientGroup <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>userAttributes<span class=\"token punctuation\">[</span><span class=\"token string\">\"custom:group\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> addUserParams <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    GroupName<span class=\"token operator\">:</span> clientGroup<span class=\"token punctuation\">,</span> <span class=\"token comment\">//set GroupName value to our custom attribute value</span>\n    UserPoolId<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>userPoolId<span class=\"token punctuation\">,</span>\n    Username<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//remove try/catch block that either gets or creates a group</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> cognitoidentityserviceprovider\n      <span class=\"token punctuation\">.</span><span class=\"token function\">adminAddUserToGroup</span><span class=\"token punctuation\">(</span>addUserParams<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We're now ready to deploy our function by running:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">amplify push</code></pre></div>\n<p>Now that our Lambda function is up and running, it's time to turn our focus to the front end. According to the Amplify docs, we can add a custom attribute to the signUp method object by placing <code class=\"language-text\">custom:</code> in front of the key/value pair.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">signUp</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Auth<span class=\"token punctuation\">.</span><span class=\"token function\">signUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        username<span class=\"token punctuation\">,</span>\n        password<span class=\"token punctuation\">,</span>\n        attributes<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          email<span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"custom:group\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//add custom: in front of our key/value pair</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"confirmSignUp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">setEmail</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sign Up Error\"</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>All we need to do from there is add our custom key/value pair to each sign-up process that requires the user to be assigned a group when they log in (along with the associated logic to get them to the proper sign-up method) and we are good to go.</p>\n<p>Hope you we are to learn something from this post. Until next time, stay healthy and safe.</p>"},"site":{"siteMetadata":{"image":"/ravenel.jpg","siteUrl":"https://scottsandman.github.io"}}},"pageContext":{}},"staticQueryHashes":[]}